name: "Continuous Integration"

on:
  push:
    branches:
      - init
      - master
  pull_request:
    branches:
      - master

jobs:
  continuous-integration-setup:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: dcas
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: dcas
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: SETUP PHP with extensions & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug
      - name: C0PY .env.example to .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: START SERVICE MySQL
        run: sudo /etc/init.d/mysql start
      - name: CREATE Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: GET Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: CACHE Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: INSTALL Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: RUN 'composer normalize'
        run: composer normalize
      - name: INSTALL NPM dependencies
        run: npm install
      - name: FIX NPM dependencies (AUDIT)
        run: npm audit fix
      - name: COMPILE web assets
        run: npm run production
      - name: GENERATE application key
        run: php artisan key:generate
      - name: SET Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: CLEAR Config
        run: php artisan config:clear
      - name: RUN Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
      - name: RUN php-cs-fixer
        run: ./vendor/bin/php-cs-fixer fix --config=.php_cs.laravel.php
#      - name: RUN PHPUnit Tests
#        run: vendor/bin/phpunit --coverage-text
#        env:
#          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
#          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
#      - name: GENERATE Next SemVer Identifiers (Get Previous Tag)
#        id: previoustag
#        uses: WyriHaximus/github-action-get-previous-tag@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: GENERATE Next SemVer Identifiers (Get next Minor Version)
#        id: semvers
#        uses: WyriHaximus/github-action-next-semvers@master
#        with:
#          version: ${{ steps.previoustag.outputs.tag }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: GENERATE Next SemVer Identifiers (Create new milestone)
#        id: createmilestone
#        uses: WyriHaximus/github-action-create-milestone@master
#        with:
#          title: ${{ steps.semvers.outputs.patch }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: COMMIT CHANGED/MODIFIED FILES
        uses: stefanzweifel/git-auto-commit-action@v2.1.0
        with:
          commit_message: Apply changes from composer-normalize, php-insights, php-cs-fixer, and SemVers
          branch: init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  merge-me:
    name: Merge me!
    runs-on: ubuntu-latest
    needs:
      - continuous-integration-setup
    steps:
      - name: Automatically merge pull requests created from teams.yml
        uses: ridedott/merge-me-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
